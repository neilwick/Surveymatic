@using Data
@using Model
@using Services
@using Microsoft.EntityFrameworkCore
@inject IDbContextFactory<HelpContext> DbFactory
@inject ISessionService Session
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage

<div>
    <button @onclick="@Show">Help</button>
    <div hidden="@IsShow" title="@HelpTag">
        <h2>@Title</h2>
        <p>@Content</p>
    </div>
</div>

@code{
    private bool IsShow { get; set; } = true;

    private void Show()

    {
        IsShow = !IsShow;
    }

    public int HelpId { get; set; }

    [Parameter]
    public string HelpTag { get; set; }

    public String Content { get; set; }

    public String Title { get; set; }

    protected override async Task OnInitializedAsync()
    {

        using var db = DbFactory.CreateDbContext();
        var item = await db.Help.Where(h => h.HelpTag == HelpTag).Include(e => e.Entries).ToListAsync();
        var he = item[0].Entries.Where(e => e.Language == Session.Language).FirstOrDefault();

        Content = he.Content;
        Title = he.Title;
    } //check to see if item is not null and make sure that "he" isnt empty for the language we are looking go
}