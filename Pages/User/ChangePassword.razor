@page "/ChangePassword"
@using Surveymatic.Model.LoginData
@using Surveymatic.Data
@using CryptoHelper
@using Microsoft.EntityFrameworkCore
@inject IDbContextFactory<SurveymaticContext> DbFactory
@inject NavigationManager navigate

<main role="main" property="mainContentOfPage" class="container">
    <h1 id="wb-cont" property="name">ChangePassword</h1>
    <section>
        <a href="Admin">Dashboard</a>
        <h4 class="username">@message</h4>
    </section>
    <section>
        <div class="newsiteuser-form">
            <EditForm Model=@passwordChange OnValidSubmit=@HandleValidSubmit>
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="form-group">
                    <label for="Email">new Password</label>
                    <InputText id="newPassword" type="password" class="form-control"
                        @bind-Value="passwordChange.NewPassword" />
                </div>

                <div class="form-group">
                    <label for="newPassword">Confirm new Password</label>
                    <InputText id="confirmnewPassword" type="password" class="form-control"
                        @bind-Value="passwordChange.ConfirmNewPassword" />
                </div>

                <button class="btn btn-primary" type="submit">Change</button>
            </EditForm>
        </div>
    </section>
</main>

@code
{
    PasswordChange passwordChange = new PasswordChange();

    string message = "";

    protected override void OnInitialized()
    {
        base.OnInitialized();
        PasswordChange passwordChange = new PasswordChange();

    }

    private void HandleValidSubmit()
    {
        using var context = DbFactory.CreateDbContext();
        var userEmail = UserInfo.Email;

        var currentUser = context.SiteUsers.Where(x => x.Email == userEmail).FirstOrDefault();


        currentUser.Password = Crypto.HashPassword(passwordChange.NewPassword);
        context.SaveChanges();
        navigate.NavigateTo("/ChangePasswordConfirm");
    }
}
