@using Data
@using Model
@using Microsoft.EntityFrameworkCore
@inject IDbContextFactory<HelpContext> DbFactory

<div>
     @if (questionContent != null)
            {
    <div>
        <h2>
           
                @questionContent.Text
            

        </h2>
        <p>  <input @onclick="@(() => OnClick.InvokeAsync(true))" type="radio" id="true" name="response" value="true"/>
            <label for="true" >True</label>
            <input type="radio" @onclick="@(() => OnClick.InvokeAsync(false))" id="false" name="response" value="false"/> 
             <label for="false" >False</label>  </p>
    </div>
}
</div>

@code{

    [Parameter]
    public EventCallback<bool> OnClick {get; set;}


    public string Language = "en";

    [Parameter]
    public string id { get; set; }

    public QuestionTranslation questionContent { get; set; }

    public Question question { get; set; }
    protected override async Task OnInitializedAsync()
    {
        using var db = DbFactory.CreateDbContext();
        int qid = Int16.Parse(id);
        question = await db.Questions.Where(q => q.QuestionId == qid).Include(e =>
        e.QuestionTranslations).FirstOrDefaultAsync();


        foreach (var qt in question.QuestionTranslations)
        {
            if (questionContent == null)
            {
                questionContent = qt;
            }
            else if (qt.Language == Language)
            {
                questionContent = qt;
            }
        }
    }
     private  void submitSurvey() {

     }
}